{"items":[{"owner":{"reputation":20223,"user_id":236047,"user_type":"registered","accept_rate":95,"profile_image":"https://www.gravatar.com/avatar/e083220ac33b47364d345eac8f017919?s=128&d=identicon&r=PG","display_name":"Victor Nicollet","link":"https://stackoverflow.com/users/236047/victor-nicollet"},"down_vote_count":0,"up_vote_count":8,"is_accepted":false,"score":8,"answer_id":1975609,"share_link":"https://stackoverflow.com/a/1975609","body":"<p>To reach a nesting level of 100 on a merge sort, you would need to have an input array of size <code>2^100</code>(about <code>1e30</code>), which is impossible. I suspect your recursion is incorrect. For instance, you wrote <code>$start + $end / 2</code> instead of <code>($start + $end) / 2</code>.</p>\n"},{"owner":{"reputation":3304,"user_id":550,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a7d85c71a25c4d596f475a4858b5087c?s=128&d=identicon&r=PG","display_name":"Juan","link":"https://stackoverflow.com/users/550/juan"},"down_vote_count":0,"up_vote_count":7,"is_accepted":true,"score":7,"answer_id":9401151,"share_link":"https://stackoverflow.com/a/9401151","body":"<p>In your <code>merge</code> function, you call count on <code>right</code> instead of <code>$right</code>. PHP assumes this is a string constant (at least in 5.3.9) and when casted into an array that always has one element. So <code>count(right)</code> is always one, and you never exit the first merge.</p>\n"},{"owner":{"reputation":3476,"user_id":325499,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/888e80528db858833b400d0a7a83dee4?s=128&d=identicon&r=PG","display_name":"Kartik","link":"https://stackoverflow.com/users/325499/kartik"},"down_vote_count":0,"up_vote_count":4,"is_accepted":false,"score":4,"answer_id":9401135,"share_link":"https://stackoverflow.com/a/9401135","body":"<p>Try this approach. Instead of shifting it, slice.</p>\n\n<p>Also, for in while loop for the <code>merge</code> function, you need to do an and <code>&amp;&amp;</code> comparison instead \nof <code>||</code></p>\n\n<pre><code>function mergeSort($array)\n{\n    if(count($array) == 1 )\n    {\n        return $array;\n    }\n\n    $mid = count($array) / 2;\n    $left = array_slice($array, 0, $mid);\n    $right = array_slice($array, $mid);\n    $left = mergeSort($left);\n    $right = mergeSort($right);\n\n    return merge($left, $right);\n}\n\n\nfunction merge($left, $right)\n{\n    $res = array();\n\n    while (count($left) &gt; 0 &amp;&amp; count($right) &gt; 0)\n    {\n        if($left[0] &gt; $right[0])\n        {\n            $res[] = $right[0];\n            $right = array_slice($right , 1);\n        }\n        else\n        {\n            $res[] = $left[0];\n            $left = array_slice($left, 1);\n        }\n    }\n\n    while (count($left) &gt; 0)\n    {\n        $res[] = $left[0];\n        $left = array_slice($left, 1);\n    }\n\n    while (count($right) &gt; 0)\n    {\n        $res[] = $right[0];\n        $right = array_slice($right, 1);\n    }\n\n    return $res;\n}\n</code></pre>\n"},{"owner":{"reputation":568,"user_id":1158019,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d45488fe5137373e0ec63746cc840310?s=128&d=identicon&r=PG","display_name":"Avanche","link":"https://stackoverflow.com/users/1158019/avanche"},"down_vote_count":0,"up_vote_count":3,"is_accepted":false,"score":3,"answer_id":9401208,"share_link":"https://stackoverflow.com/a/9401208","body":"<p>Have a look at this, the algorithm is already implemented, using array_push and array splice instead of just array_shift.</p>\n\n<pre><code>http://www.codecodex.com/wiki/Merge_sort#PHP\n</code></pre>\n"},{"owner":{"reputation":46,"user_id":231648,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/91a1db323b404f866d5ffe9d1912892f?s=128&d=identicon&r=PG","display_name":"OlegK","link":"https://stackoverflow.com/users/231648/olegk"},"down_vote_count":0,"up_vote_count":1,"is_accepted":false,"score":1,"answer_id":1975580,"share_link":"https://stackoverflow.com/a/1975580","body":"<p>Set</p>\n\n<pre><code>xdebug.max_nesting_level=500 \n</code></pre>\n\n<p>in my php.ini</p>\n"},{"owner":{"reputation":96,"user_id":168255,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a95e70ac7b2964b6386b1034473fbe2a?s=128&d=identicon&r=PG","display_name":"Chris Martin","link":"https://stackoverflow.com/users/168255/chris-martin"},"down_vote_count":0,"up_vote_count":1,"is_accepted":false,"score":1,"answer_id":4643794,"share_link":"https://stackoverflow.com/a/4643794","body":"<p>Here's my working solution, feel free to compare...</p>\n\n<pre><code>/**\n * @param array $items array to sort\n * @param int   $l     left index (defaults to 0)\n * @param int   $r     right index (defaults to count($items)-1)\n */\nfunction mergeSort(&amp;$items, $l = 0, $r = null)\n{\n    if (!isset($r)) {\n        $r = count($items) - 1;\n    }\n\n    if ($l &lt; $r) {\n        $m = floor(($r - $l) / 2) + $l;\n        mergeSort($items, $l, $m);\n        mergeSort($items, $m + 1, $r);\n        merge($items, $l, $m, $r);\n    }\n}\n\n/**\n * @param array $items array to merge\n * @param int   $l     left index\n * @param int   $m     middle index\n * @param int   $r     right index\n */\nfunction merge(&amp;$items, $l, $m, $r)\n{\n    $itemsA = array_slice($items, $l, $m + 1 - $l);\n    $itemsB = array_slice($items, $m + 1, ($r + 1) - ($m + 1));\n\n    $a = 0;\n    $aCount = count($itemsA);\n    $b = 0;\n    $bCount = count($itemsB);\n\n    for ($i = $l; $i &lt;= $r; $i++) {\n        if ($a &lt; $aCount &amp;&amp; ($b == $bCount || $itemsA[$a] &lt;= $itemsB[$b])) {\n            $items[$i] = $itemsA[$a++];\n        } else {\n            $items[$i] = $itemsB[$b++];\n        }\n    }\n}\n\n$items = array(5,3,6,1,2,3,9,10,7,2,4,8);\nmergeSort($items);\necho implode(',', $items) . \"\\n\";\n</code></pre>\n\n<p>Outputs:</p>\n\n<pre><code>1,2,2,3,3,4,5,6,7,8,9,10\n</code></pre>\n"},{"owner":{"reputation":18090,"user_id":64193,"user_type":"registered","accept_rate":94,"profile_image":"https://www.gravatar.com/avatar/6d5d5488960dcb0cab2d02a031e51ba9?s=128&d=identicon&r=PG","display_name":"Scott Saunders","link":"https://stackoverflow.com/users/64193/scott-saunders"},"down_vote_count":0,"up_vote_count":0,"is_accepted":false,"score":0,"answer_id":1975573,"share_link":"https://stackoverflow.com/a/1975573","body":"<p>There is a maximum function nesting level of '100', and you have reached it. Your recursive function goes too deep.</p>\n"},{"owner":{"reputation":3758,"user_id":56225,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/WpC9A.jpg?s=128&g=1","display_name":"bkildow","link":"https://stackoverflow.com/users/56225/bkildow"},"down_vote_count":0,"up_vote_count":0,"is_accepted":false,"score":0,"answer_id":1975587,"share_link":"https://stackoverflow.com/a/1975587","body":"<p>From <a href=\"http://www.xdebug.org/docs/all_settings\" rel=\"nofollow noreferrer\">http://www.xdebug.org/docs/all_settings</a>:</p>\n\n<blockquote>\n  <p>xdebug.max_nesting_level\n  Type: integer, Default value: 100\n  Controls the protection mechanism for infinite recursion protection. The value of this setting is the maximum level of nested functions that are allowed before the script will be aborted.</p>\n</blockquote>\n\n<p>You are going too deep in your recursive function triggering this xdebug error. Try raising this limit and see if that helps.</p>\n\n<p>Also, here is an interesting article about recursion and PHP: <a href=\"http://www.alternateinterior.com/2006/09/tail-recursion-in-php.html\" rel=\"nofollow noreferrer\">http://www.alternateinterior.com/2006/09/tail-recursion-in-php.html</a></p>\n"},{"owner":{"reputation":91152,"user_id":13508,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/c9e1d852b4d287027fe76f794e506878?s=128&d=identicon&r=PG","display_name":"&#193;lvaro Gonz&#225;lez","link":"https://stackoverflow.com/users/13508/%c3%81lvaro-gonz%c3%a1lez"},"down_vote_count":0,"up_vote_count":0,"is_accepted":false,"score":0,"answer_id":1975599,"share_link":"https://stackoverflow.com/a/1975599","body":"<p>PHP is not a good language for recursive algorithms. From the <a href=\"http://es2.php.net/manual/en/functions.user-defined.php\" rel=\"nofollow noreferrer\">manual</a>:</p>\n\n<blockquote>\n  <p>It is possible to call recursive\n  functions in PHP. However avoid\n  recursive function/method calls with\n  over 100-200 recursion levels as it\n  can smash the stack and cause a\n  termination of the current script.</p>\n</blockquote>\n\n<p>If you need to do it in PHP, you'll probably have to find an iterative version of the algorithm. You've hit a hard-coded limit in the language.</p>\n"},{"owner":{"reputation":1,"user_id":240972,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/795604ba66d65ddf64ee9c01185b4b3e?s=128&d=identicon&r=PG","display_name":"leo","link":"https://stackoverflow.com/users/240972/leo"},"down_vote_count":0,"up_vote_count":0,"is_accepted":false,"score":0,"answer_id":1980751,"share_link":"https://stackoverflow.com/a/1980751","body":"<p>Cosi dovrebbe funzionare!!!!  www.dslpg.it</p>\n\n<pre><code>function merge ( &amp;$a, $left,  $center, $right ) { //left = p   right = r  center = q\n    $n1 = $center - $left + 1;\n    $n2 = $right - $center;\n    for ($i = 1; $i &lt;= $n1; $i++) $L[$i] = $a[$left+$i-1];\n    for ($i = 1; $i &lt;= $n2; $i++) $R[$i] = $a[$center+$i];\n    $L[$n1+1] = 99999;\n    $R[$n2+1] = 99999; \n    $i = 1;\n    $j = 1;\n    for ($k = $left; $k &lt;= $right; $k++) {\n        if ($L[$i] &lt;= $R[$j] ) {\n            $a[$k] = $L[$i];\n            echo $a[$k];\n            $i++;\n        }\n        else {\n            $a[$k] = $R[$j];\n            echo $a[$k];\n            $j++;\n        }\n    }\n    return $a;\n}\nfunction merge_sort ( &amp;$a, $left, $right ) { //left = p  right = r\n    if ( $left &lt; $right ) {\n        $center = (int) floor(($left + $right) / 2 );\n\n        merge_sort ($a, $left, $center);\n        merge_sort ($a, $center+1, $right);\n        merge ($a, $left, $center, $right);\n    }\n}\nmerge_sort ( $a, 1, $n );\n</code></pre>\n"},{"owner":{"reputation":19,"user_id":4577836,"user_type":"registered","profile_image":"https://graph.facebook.com/10152731435562825/picture?type=large","display_name":"Rana Kolta","link":"https://stackoverflow.com/users/4577836/rana-kolta"},"down_vote_count":0,"up_vote_count":0,"is_accepted":false,"score":0,"answer_id":42007590,"share_link":"https://stackoverflow.com/a/42007590","body":"<p>Your merge sort accepts a list by reference</p>\n\n<pre><code>function merge_sort(&amp;$list)\n</code></pre>\n\n<p>So you need to assign it the new merged and sorted list. So instead of</p>\n\n<pre><code>return merge($left, $right);\n</code></pre>\n\n<p>do</p>\n\n<pre><code>$list = $this-&gt;merge($left, $right);\n</code></pre>\n\n<p>That should do it, just remove the exit and fix the count variable</p>\n"},{"owner":{"reputation":71,"user_id":2304608,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Nn1IO.jpg?s=128&g=1","display_name":"ayan sil","link":"https://stackoverflow.com/users/2304608/ayan-sil"},"down_vote_count":1,"up_vote_count":0,"is_accepted":false,"score":-1,"answer_id":16132508,"share_link":"https://stackoverflow.com/a/16132508","body":"<pre><code>&lt;?php\n\n                    ###################\n                    #merge sort in php#\n                    ###################\n$ar=array(2,5,4,3);\nprint_r($ar);\necho \"&lt;br/&gt;\";\n$sar=ms($ar);\nprint_r($sar);\necho \"&lt;br/&gt;\";\nfunction ms($tar)\n{   \n$size=count($tar);\nif($size&lt;=1)\n{\n    print_r($tar);\n    echo \"&lt;br/&gt;\";\n    return $tar;\n}   \nelse\n{\n    $middle=(int)($size/2);\n    for($i=0;$i&lt;$middle;$i++)\n    {\n        $left[$i]=$tar[$i];\n    }\n    for($i=$middle,$j=0;$i&lt;$size;$i++,$j++)\n    {\n        $right[$j]=$tar[$i];\n    }\n    $tl=ms($left);\n    $tr=ms($right);\n    $ma=merge($tl,$tr);\n\n    return $ma;\n}\n}\nfunction merge($l,$r)\n{\n\n$sizel=count($l);\n$sizer=count($r);\n$j=0;\nwhile(($sizel&gt;0)||($sizer&gt;0))\n{   \n    if(($sizel&gt;0) &amp;&amp; ($sizer&gt;0))\n    {\n        if($l[0]&lt;=$r[0])\n        {\n            $result[$j]=array_shift($l);\n            $j++;\n        }\n        else\n        {\n            $result[$j]=array_shift($r);\n            $j++;\n        }\n\n    }\n    else if($sizel&gt;0)\n    {\n        $result[$j]=array_shift($l);    \n        $j++;   \n    }\n    else\n    {\n        $result[$j]=array_shift($r);\n        $j++;\n    }\n    $sizel=count($l);\n    $sizer=count($r);\n}\n    return $result; \n}\n?&gt;\n</code></pre>\n"}],"has_more":false,"quota_max":300,"quota_remaining":273}